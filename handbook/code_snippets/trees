vector <int> adj[MX];
int subtree[MX];
int flat[MX];
int vals[MX];

int idx = 1;
int dfs(int a, int p){
    flat[a] = idx;
    idx++;
    for(int b : adj[a]){
        if(b == p)
            continue;
        subtree[a] += dfs(b, a)+1;
    }
    return subtree[a];
}


const int MX = 2e5+7;
const int LOG_MX = 18;
 
int boss[MX][LOG_MX];
 
int main(){
    int n, q;
    cin >> n >> q;
    boss[1][0] = 0;
    for(int i = 2; i <= n; i++){
        cin >> boss[i][0];
    }
    for(int i = 1; i < LOG_MX; i++){
        for(int emp = 1; emp <= MX; emp++){
            boss[emp][i] = boss[boss[emp][i-1]][i-1];
        }
    }


